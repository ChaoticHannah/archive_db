Survey_NPS_Score_1__c,Backorder_Type_3__c,Lead_Comments_Long__c,Contracted_Monthly_Payment__c,Frequency_of_Problem__c,Issue_Details__c,Do_Not_Contact__c,IIR_Date__c,Section__c,Technical_Escalation_Status__c,SurveyScore__c,Language_Code__c,Is_Customer_Satisfied__c,ln__c,VPP_On_Site_Activation_Interest__c,Intended_Promotions__c,Letter_Sent_Date__c,SIC__c,Quantity_5__c,Lease_Start_Date__c,DRT_Support_IIR_Status__c,Disablement_Zip__c,Executive_Referral__c,Backorder_Ranking_5__c,TSO_Number__c,Tested_By__c,Considered_Vehicle_Data__c,Supply_ETD__c,DTS_Inspection_Date_Confirmed__c,Customer_Conversation_Notes__c,Mailing_City__c,How_were_we_contacted__c,Recommendation_Rating__c,Symptom_Code_Category__c,Contract_Start_Date__c,Spanish_Speaking_Customer__c,Subscription_Status__c,Beyond_Basic_Warranty_Months__c,Vehicle_Purchased__c,Order_Number_2__c,Backorder_Ranking_1__c,Last_Contact_Date__c,Survey_Dealer_Number__c,Part_Description_1__c,Dealer__c,With_Customer_With_Dealer__c,Special_Remark_Line_Count__c,Case_Reason_Other__c,Match__c,Call_Start_Time__c,DTS_User_Cell_Phone__c,ICCID__c,NMAC_Account__c,is1__IS_Account_ID__c,Trade_In_Value__c,App_Version__c,Fire_Indicator__c,Description,Priority,Head_Unit__c,Middle_Initial__c,VCAN__c,First_Call_Resolution__c,Loan_Months_Remaining__c,Short_Description__c,Attachment_Indicator__c,First_Name__c,Incident_Number__c,RDR_Account__c,Reason_assigned_to_Inf_of_Manhattan__c,Case_Age__c,Incident_RO_Date__c,FirstCallResolution__c,Reopen_New_Count__c,Model_Id__c,Survey_NPS_Score_3__c,Preferred_Timeslot__c,Agent_Reason__c,LastReferencedDate,NNA_Net_Hot_Alert_Type__c,Lead_Provider_Detail__c,Resend_Request_Indicator__c,IIR__c,X24_hour_Response_Date__c,Nearest_Infiniti_Dealer__c,Goodwill_Offered_Date__c,Who_contacted_us__c,Escalation_Type_ID__c,Symptom_Code__c,Survey_ID__c,Executive_Summary_Completed_Date__c,BeyondBasicWarrantyMonths__c,Caller_Reference_No__c,Preferred_Appointment_Time__c,Symptom_Code_Issue__c,Confirmed_Appointment_Date__c,Reason,Follow_Up_Request__c,Escalated_to_SSQ__c,Literature_Data__c,IsClosedOnCreate,Vehicle_Service_Contract__c,Li_Community_User__c,Part_Description_3__c,Query_Escalated_To__c,Tow_Mileage__c,Phone_TMID__c,DTS_Name__c,Customer_Interested_in__c,Location_Name__c,HasCommentsUnreadByOwner,Phone_Number__c,FF_Score__c,Assignment_Level_Code__c,Lead_Category__c,SlaExitDate,LastViewedDate,Goodwill_Offered__c,Notification_2__c,When_Plan_Purchase__c,Callback_Required__c,Problem_Resolved__c,Safety_Concern__c,Most_Recent_Service_Date__c,Open_Promotion__c,Payment_Offer_Clean__c,Board_ID__c,Vehicle_Purchased_Miles__c,Call_Back_Required__c,Preferred_Contact_Method__c,Number_Injured__c,ROM__c,Service_Provider_ID__c,Month_Mailed__c,Parts_Manager_Notified__c,Executive_Summary__c,Mileage_Allowance__c,RCAS_Active__c,Hot_Alerts_indicator__c,How_was_the_action_taken__c,Date_Observed__c,Service_Contract__c,DealerExternalId__c,SurveyGizmo24HourSent__c,Will_Client_Fund__c,VSC_Mailing_Street__c,Road_Service_Call_Number__c,Injury_Date__c,Control_Group_Check_Box__c,Sales_Type__c,DRT_Support_Status__c,Incident_Date__c,Beyond_Basic_Warranty_Miles__c,X24_hour_Reponse_Date__c,Reopened_Times__c,Type,Quantity_2__c,DTC_2__c,Email2__c,CreatedBy__c,Control_Number__c,Reported_From__c,Severity_Rating_Code__c,Part_Number_4__c,Action_Code__c,Destination_Type__c,WhatIsTheIssue2__c,CustomerNameFormula__c,TSS_Name__c,Survey_NPS__c,Website__c,Product_Alert_Number__c,Mailing_Zip_Plus4__c,SparkID__c,DTC_3__c,Responsible_Dealer_Number__c,Dealer_Referral_Code__c,Current_Mileage__c,Hot_Alert_Cost__c,Maritz_Customer_Id__c,Verified__c,RequestedDealerActionIsBlank__c,Hot_Alert_Source__c,Requested_By__c,Phone_Manufacturer__c,Preferred_Dealer__c,RHR_Start_Date__c,CaseServicingDealerStatus__c,Date_Email_Responded__c,Survey_Response_Date__c,Document_ID__c,Dealer_Update_By_User_ID__c,Manager_Reviewed_Indicator__c,Email_Do_Not_Email__c,Production_Release_Date__c,Settlements_Open__c,CongaTestLink__c,ModelSeriesFromVehicle__c,Case_Servicing_Dealer_Code__c,Order_Number__c,Component_Group__c,Reservation_Number__c,Severity__c,Solution_Rating__c,Order_Number_5__c,OtherInfo__c,Vehicle_DQR_Information__c,Calculated_Days_Down__c,Dealer_CA_Manager_Name__c,ProductId,RecordTypeId,Spare_8__c,Remove_Dealer_Sharing__c,Reason_for_Call_Code__c,Survey_Index_Score__c,Make__c,Specialist_Code_UP__c,Remediation_Plan__c,Survey_Days__c,DTS_User_Office_Phone__c,Model_Year__c,Revision_Number__c,What_Department__c,Social_Status__c,NC_Subscription_Status__c,VIN__c,Thread_ID__c,Datanet_Dealer_Indicator__c,QA_Release_Date__c,Vehicle_Mileage_Prior_Value__c,Contact_Type1__c,Component_Code_Issue__c,IsEscalated,CheckRequestsSubmitted__c,FFFS_Date__c,User_Defined_Text_1__c,Part_Description_2__c,Fire_Date__c,Catalog_Update_Responsibility__c,Escalation_Elapsed_Days__c,Accident_Indicator__c,Additional_Days_Down__c,Root_Cause_Code__c,Region_d__c,Home_Phone_Do_Not_Call__c,Survey_Verbatim_2__c,Customer_ID__c,Notification_4__c,Action_Flag__c,Lease_or_Loan__c,VPP_Promotion_Opt_In__c,TREAD_Effective_Date__c,Catalog_Update_Rqrd__c,Responsibility_Code__c,User_Defined_Text_3__c,Dealer_Country__c,Letter_Received_Date__c,Case_Type__c,Alternate_Email__c,Goodwill_Processed__c,Backorder_Type_2__c,CA_Multiple_Repairs__c,Co_Leasee_Co_Buyer_First_Name__c,Tow_To_State__c,LastModifiedDate,New_User_Email_Address__c,Vehicle_In_Service_Date__c,Datanet_Dealer_Count__c,Error_Reproduced__c,DTS_Notes__c,SSQSurvey_Response_Date__c,Lead_Provider_Name__c,Service_Provider_ETA__c,Rollover_Indicator__c,Order_Number_1__c,Previous_Repair_Location__c,Case_Owner_Email__c,Problem_Analysis__c,SuppliedName,Reopen_Date__c,Reopen_Callback_Date__c,Escalation_Resolved__c,Production_Date__c,Retail_Dealer__c,Reason__c,Secondary_Reason__c,Region_Code__c,Issue_Type__c,CreatedById,Purchase_Timeframe__c,Originator_Code__c,Other_Concern__c,VPP_Contact_Phone__c,Area_Impacted__c,Part_Number_5__c,Contract_Type__c,Responsible_District__c,NNAnet_Status_at_Start__c,CreatedDate,Social_Resolution__c,VPP_Contact_Title__c,IsStopped,Requested_RO_Number__c,Shared_via_Portal__c,DTS_User_Email__c,Survey__c,Other_TECH_LINE_Reports__c,Mobile_Phone_Do_Not_Call__c,Social_Support_Involvement__c,VPP_Contact_First__c,Escalation_Resolved_By__c,Email_Closed_Loop_Verbatim__c,Pre_Ordered__c,Responsible_Region__c,Field_Inspection_Indicator__c,SuppliedEmail,Call_Center__c,Contact_Type2_C__c,RHR_Completed_Date__c,Lead_Provider__c,Component_Code__c,Assignee_1__c,Specialist_Code__c,What_is_the_issue__c,Caller_Name__c,Featured_Vehicle__c,Survey_NPS_Type_2__c,Loan_Maturity_Date__c,Phone_Carrier__c,Comment_Text3__c,Special_Root_Cause_Closing_Code__c,Hot_Alert_Status__c,Requesting_Department__c,VehiclePurchasedType__c,Report_Type__c,TSS_Code_Primary__c,Quantity_4__c,CST_Approvals__c,Tow_To_Zip__c,How_Did_you_Find_the_Answer__c,LeadProviderNameTranslated__c,Bill_Group__c,Special_Root_Cause_Closing_Code_2__c,Reopen_Other_Date__c,Originator_Region__c,Vehicle_Maintained_Location__c,Current_Vehicle_Lease_Exp_Date__c,DealerCode__c,Mileage_Initial__c,Status,BeyondBasicWarrantyMiles__c,Check_Request_Origin__c,Current_Vehicle_Lease_Indicator__c,DQR_Number__c,TCU__c,Hot_Alert_Date__c,Backorder_Type_5__c,Part_Description_4__c,Handled__c,Alternate_Email_Do_Not_Email__c,Lease_Months_Remaining__c,IsClosed,First_Response__c,Country_Origin__c,Follow_Up_Preference__c,DTS_Request_Type__c,FOM_Notified__c,Total_Verbatims__c,Servicing_Dealer__c,Dealer_Address_Phone_Number_and_Fax__c,Distributor_Code__c,FFFS__c,Spare_9__c,Escalation_Ticket__c,Stage_Status__c,SuppliedCompany,Inquiry_Type__c,Community_URL__c,Other_Information__c,Assignee_2__c,VSC_Requests__c,Assignment_Level__c,Legacy_Case_Number__c,Incoming_Car_Indicator__c,Lease_Maturity_Date__c,Segment_Letter__c,Previous_Repair_Date__c,Disablement_City__c,fn__c,Key_Part_Code__c,Completed_Outbound_Calls__c,Record_Number__c,Reopen_New_Date__c,Agent_Login__c,Brakes__c,Dealer_Reference_Number__c,Tow_To_City__c,Case_ReasonTemplate__c,Dealer_Resolved__c,Customer_Name__c,Service_Dealer_Number__c,Author_Rank__c,Repair_Attempts__c,ClosedDate,Days_Closed__c,Callback_Count__c,ContactId,Model_of_Interest_1st__c,New_Preferred_Dealer__c,Retailer_Close_Date__c,IsDeleted,Segment_Mailed__c,VPP_Contact_Email__c,Notification_1__c,Payment_Request_Identifier__c,Dealer_PDC__c,Call_Resolution__c,Part_Description_5__c,CA_CaseReopenCount__c,NNA_Field_Inspection_Date__c,Area__c,Quantity_1__c,Hours_Worked__c,Response_Date__c,Critical_Status_Flag__c,Comment_Text1__c,LastModifiedById,Lease_Monthly_Payment__c,Date_Sent__c,Callback_Date_CYMD__c,Number_of_Employees__c,Escalated_User__c,Channel__c,FSSS__c,Incident_Category__c,Backorder_Ranking_4__c,SurveyGizmoLeadCreationtime__c,New_User_First_Name__c,Mailing_Street_2__c,Customer_Satisfied_With_Dealer__c,Dealer_Region_Code_Form__c,Customer_Comments__c,Property_Damage_Date__c,SurveyGizmoSendStatus__c,Event_Date__c,IPA_Subscription_Status__c,Order_Number_3__c,VCS_Validation__c,Dealer_Update_Date__c,Suggested_Hours_Worked__c,Transferred_to_RCAS__c,Firmware_Version__c,Previous_Promotion_Other__c,Location_Employees__c,Previous_Promotions__c,Surveyable__c,Mailing_Street__c,Catalog_Pub__c,Responsible_Dealer_Data__c,DTS_Inspection_Date_Set__c,Company_Name__c,Supervisor_Review__c,Operating_Temperature__c,F_I_Manager_Service_Tech__c,X24_hour_Response__c,Customer_Declined__c,Author_Login__c,VSC_Mailing_City__c,Inspection_Time_Notes__c,Expected_Response_Date__c,Hot_Alert_Age__c,Callback_UserID__c,Tow_To_Address_Name__c,Survey_Type__c,Model_Line__c,Dealer_Quotes_Request__c,Follow_Up_NPS_Type__c,Registered__c,Case_Owner_Location2__c,Requested_Part__c,Sales_Service_Consultant__c,Requested_Dealer_Call__c,User_Defined_Number_1__c,VSC_Mailing_State__c,Lead_Comments__c,Escalation_ID__c,SIM__c,Datanet_Dealer_Date__c,Branded_Title__c,Backorder_Ranking_3__c,EscalatedByID__c,DOM_Notified__c,SuppliedPhone,Phone_Operating_System__c,Disposition__c,Comment_Text__c,Shared_With__c,Email_Indicator__c,Deflection_Risk__c,Region__c,Legacy_Owner_Id__c,Approved_Phone__c,Sentiment_Band__c,FollowUpTimeframe__c,Considered_Vehicle_Model__c,Tow_To_Address__c,Part_Number_2__c,Dealer_Action_Plan__c,DocumentID__c,Campaign_Type__c,Disablement_Reason__c,TREAD_Component_Prior_Value__c,Decile_Score__c,Community_ID__c,New_User_Last_Name__c,NNA_Notes__c,Submitted_Check_Requests__c,Who_called__c,OwnerId,District_Name__c,Channel_Designation_Code__c,Browser_Version__c,No_Phone_Numbers__c,PNC_Description__c,AssetId,Message_Posted__c,Buyback__c,Disqualified_Reason__c,CDIID__c,Subject,Unintended_Acceleration__c,Disablement_Street__c,Buyback_Restriction__c,Tech_Preferred_Phone__c,Contact_Record_Type__c,Legacy_Root_Cause__c,Vehicles_Owned__c,Defect__c,IIR_Indicator__c,BeyondPTWarrantyMiles__c,Case_External_ID__c,Tech_Phone_Type__c,Loan_Payoff_Amount__c,Where_did_this_originate__c,EntitlementId,Vehicle_Model__c,Response_Time__c,VSC_Reprint_Request__c,Manufacturer_Date__c,URL_Related_to_Issue__c,Backorder_Type_4__c,Supply_Resolution__c,ROI__c,Contract_Term__c,Home_Phone__c,User_Defined_Date_1__c,Dealer_Instructions__c,Infiniti_Action_History__c,Issue_Categories__c,Escalation_Started__c,Email_Closed_Loop_Date__c,Co_Leasee_Co_Buyer_Last_Name__c,Work_Phone_Do_Not_Call__c,Date_Closed__c,Email_Reminder_Sent__c,Considered_Vehicle_Make__c,Multiple_Repairs__c,Phone_Model__c,Contacted_by_Dealer__c,Disablement_State__c,Model1__c,Pre_Approval_Amount__c,Publication_Date__c,Receipt_Date_ID__c,Who_Took_Action__c,Client_Dealer_ID__c,Calls_Complete__c,No_Response_Required__c,Total_Days_Down__c,Contact_ID__c,Origination__c,Trade_In_Rough__c,CSM_Notified__c,Business_Unit__c,Dealer_Name__c,In_Service_Date__c,Country_of_Origin__c,Engine_Number__c,Owner_Portal_ID_User_ID__c,VPP_Contact_Last__c,Field_Open_Date__c,Repair_Root_Cause_Code__c,Id,Sent_to_Legal_Indicator__c,Ambient_Humidity__c,ContactHomePhone__c,Reopen_New_UserID__c,Call_Disposition_Code__c,Dealer_Code__c,Lease_Payoff_Amount__c,Agent_Comments__c,Tel_Survey_Indicator__c,Reason_for_Call_Description__c,Technical_Escalation_Resolution_Notes__c,Model_of_Interest_2nd__c,BeyondPTWarrantyMonths__c,Ambient_Temperature__c,Trans_Type__c,Sequence_Number__c,Engine_Code_8__c,Reason_For_Call__c,Third_Party_Involvement__c,Classification__c,Survey_NPS_Score_2__c,Categorizations__c,EveningPhone__c,DTS_Notification__c,Servicing_Dealer_Region__c,Other_DTCs__c,Transaction_Master_Id__c,SlaStartDate,IsDOM__c,Mailing_Zip_Code__c,SystemModstamp,Part_Number_1__c,Email_Received_Date__c,Form__c,Survey_NPS_Type_1__c,IsSelfServiceClosed,Legacy_Root_Cause_2__c,Survey_Source__c,Mobile_Phone__c,CongaLastPrint__c,Time_Observed__c,Confirmed_Appointment_Time__c,DaysDownManual__c,Closed_by_NMAC__c,Assignment_Level_Name__c,Bonus_Cash_Code__c,Safety_Indicator__c,Diagnostic_Questions__c,Elapsed_Time__c,Date_Email_Received__c,Notification_3__c,AlternatePhone__c,PrintCasesConga__c,Supply_Status__c,Work_Phone__c,Net_Promoter_Score__c,DealerRegion_Code__c,Survey_Request_Date__c,Property_Damage_Indicator__c,Parts_Dept_Fax__c,SurveyGizmoSurveySent__c,Overall_Customer_Satisfaction__c,SurveyGizmoBatchdatetime__c,is1__Chat_ID__c,Service_Provider_Name__c,Engine_Code_4__c,DTS_Field_Inspection__c,Likely_To_Purchase__c,Dealer_Days__c,Primary_Reason__c,Text_Okay__c,Owner_ZCA_ID__c,Revision_Date__c,Trade_In_Average__c,Tracking__c,Beyond_PT_Warranty_Months__c,Other_Primary_Reason_for_Call__c,Survey_Specific_Contact_Information__c,Task_ID__c,Quantity_3__c,Selected_Dealer_Number__c,Root_Cause_Code_2__c,Reopen_Other_UserID__c,Committed_Promotion_Other__c,Last_Name__c,Yesmail_Inquiry__c,Bluetooth_Ticket_Status__c,Exec_Received_Date__c,NNAnetStatus_at_Start__c,Reopen_Callback_UserID__c,Mail_Stop__c,Buyback_Status__c,Incident_Category_Name__c,Post_Follow_Up_NPS_Score__c,Rollover_Date__c,Where_did_this_originate_2__c,Steering__c,Comment_Text2__c,Service_Manager_Notified__c,StopStartDate,Reopen_Callback_Count__c,Call_End_Time__c,Lease_Term__c,Responsible_PDC__c,Purchase_Date__c,Preferred_Appointment_Date__c,AccountId,Escalate_To__c,Time_to_ResolveSocial__c,User_Defined_Text_2__c,Total_Calls_Open_and_Closed__c,Alert_Trigger_Verbatim__c,Lease_Loan_Maturity_Days__c,TREAD_Component__c,Dealer_Case_Request__c,InterviewID__c,Part_Number_3__c,Project_Number__c,Check_Requests_Total__c,IC_Subscription_Status__c,X24_hour_Reponse__c,ParentId,Managed_Services_Scope__c,Closed_by_Suppression__c,Backorder_Type_1__c,DTC_1__c,Op_Subscription_Status__c,Previous_Issue__c,Record_Suffix__c,Customer_Satisifed_With_Brand__c,Time_Logged__c,SRS__c,Supporting_Documents__c,Mailing_State__c,Follow_Up_Date__c,Trade_In_Clean__c,Color_Code__c,Case_Age_Days__c,Tech_Preferred_Email__c,Specialist_Code_Uppercase__c,RCAS_ID__c,Requested_Part_Number__c,AssignmentLevel__c,Equity__c,Pre_Approval_Number__c,VPP_Claim_Code__c,TCU_Activation_Status__c,SurveyGIzmoBatchSendDateTime__c,Road_Service_Call_Indicator__c,Customer_Disposition_After__c,Sales_Manager_Notified__c,Response_Type__c,Customer_Escalated__c,Service_Provided__c,Model_Line_Series__c,Rating__c,Techline_Notifications_Sent__c,SpaceID__c,Current_APR__c,Operating_Mode__c,DRT_Origination__c,Data_Net__c,CSI_SSI__c,LHQ_ID__c,NOTOR_Flag__c,DPIC_Internal_Notes__c,Confirmed_Timeslot__c,State_Of_Incident__c,HasSelfServiceComments,Techline_Template__c,CA_Reports__c,Email_Verbatim__c,Field_Close_Date__c,Solution_Description__c,Airbag_Indicator__c,Customer_Satisfied_With_Brand__c,Component_Code_Category__c,ITA_Subscription_Status__c,Parts_Available_Indicator__c,Lead_Date__c,Dealer_Could_Benefit_By__c,Service_Call_ID__c,Survey_Verbatim__c,Model2__c,BusinessHoursId,Order_Number_4__c,Model_Code__c,Risk__c,IsVisibleInSelfService,Injury_Indicator__c,Dealer_Number__c,Survey_NPS_Type_3__c,Model_Name__c,MilestoneStatus,Current_Vehicle_Data__c,Date_Opened__c,DTS_Inspection_Task_Assigned__c,Trim_Code__c,C_A_R_File__c,What_action_was_taken__c,Dealer_Forward_Indicator__c,Social_Resolved_Time__c,Vehicle_Make__c,Heads_Up_Date__c,WCC_Dealer_Handling_Instructions__c,Resolution_Notes__c,Backorder_Ranking_2__c,Survey_Verbatim_1__c,Model_Series__c,Vehicle_Name__c,ModelIDFromVehicle__c,Shipped_Date__c,Payment_Offer_Average__c,CaseServicingDealerPortal__c,Assigned_to__c,VehiclesOwned__c,Vehicle_Year__c,Sent_to_Legal_Date__c,Escalated_Type_ID__c,Initial_Recommendation__c,Origin,Spam_Remove_from_Backfeed__c,Beyond_PT_Warranty_Miles__c,Correction_Notes_Text__c,Incident_Category_Code__c,Reopen_Other_Count__c,CaseNumber,Thoroughness_of_Work__c,Error_Code__c,is1__Mail_ID__c,Task_Created_Date__c,VSC_Mailing_Zip__c,Disqualified__c,Call_Recording_ID__c
,,,,,,FALSE,,,,,,,,FALSE,,,,,,,,FALSE,,,,,,FALSE,,,,,,,FALSE,,,,,,,,,,,,,,,,,,,,,FALSE,This is Techline case description,Normal,,,FALSE,,0,,FALSE,,,,,,,,,,,,,,,,,,,,,,012F0000000yD2r,,,,0,,,,,,You must first enter the Related Vehicle Make,FALSE,,FALSE,,,,,,,,,,FALSE,,,,,,,FALSE,,,,,FALSE,,,,,,,,0,,,,FALSE,FALSE,,No,FALSE,,,FALSE,,FALSE,,,,,FALSE,,,,,,0,Dev,,,,00eA0000000OSON,,,9,,,,,",",,,,,,,,,,,,,,Yes,,aaaaasd,,,,Active,,,CA16646501,,No,FALSE,,0,"<a href=""https://conductor.appextremes.com/apps/Conga/Composer.aspx?SessionId=00DM0000001deUz!AQYAQJFQgBrDa5.CJrUEstYsAwX5SS.J3nUvJZGUBzsFsOgDFpnznTAtbxoBqQKcHQgWfDP86M6hxRJA70e3bB2F36WCRPpZ&amp;ServerUrl=https://c.cs7.visual.force.com/services/Soap/u/21.0/00DM0000001deUz&amp;id=500M0000004q2xJ&amp;queryid=[CaseCategorization]a10F0000001eAYR,[CheckRequests]a10F0000001eAYW,[CustomerSupportTools]a10F0000001eAYb,[Forms]a10F0000001eAYg,[CaseComments]a10F0000001eAYl&amp;templateid=a0zF0000003HDjh&amp;qmode=1&amp;defaultpdf=1"" target=""_blank"">Test Conga Workflow URL via UI</a>",,,,,,,,,,,0,,,012F0000000yFmQIAU,,FALSE,,,,,,0,,,,,,FALSE,,,FALSE,,,,,FALSE,0,,,,,,,FALSE,,,,FALSE,,003M000000XfqVn,,FALSE,,FALSE,,,,,,,,,0,,FALSE,,,12/12/2014 14:53,,,,,,,,,FALSE,,,,"What?

Where?

When?

Extent?",,,,,,,,,,,005M00000067DFmIAM,,1ProblemI,FALSE,,,,,,,12/10/2014 17:34,,,FALSE,,FALSE,,,,FALSE,FALSE,,,,,,FALSE,,,,,,,1,,,,,,,,,,,,,,,,0,,,,,,,,,,,,Identified,0,,FALSE,,,,,,No,FALSE,0,FALSE,,,,,FALSE,,,"<br>,  <br><br>Phone: <br>Fax:",,FALSE,,,Add Processing,,,,,1,0,,,FALSE,,,,,,,0,,,,FALSE,,,FALSE,,,,,,,0,,003M000000XfqVnIAJ,No Model Indicated,,,FALSE,,,,,,,,0,,,,,,FALSE,,005M00000067DFmIAM,,,,,,,FALSE,,,,,,,,,,,,FALSE,,:,,,FALSE,,,,,FALSE,,,,,,FALSE,,,FALSE,,,,"Appointment Time:

Notes to Agent:",,,,,,,,Brand,,,,,,,,,,,,No,,,FALSE,,,,,,,,,,,,-27,,,,,CA16646501,,,,,,,,0,,005F00000031aebIAA,,,,FALSE,,,,,,,This is test subject for Tech Line case,FALSE,,0,,012F0000000zbda,,,,0,0,,,,,,,0,Email,,,,,,0,,,,,,,,,FALSE,,FALSE,,No,,,,,,,,,,0,FALSE,0,,,,FALSE,,,,,,,,,,500M0000004q2xJIAQ,FALSE,,,,,,,,,,,No Model Indicated,0,,,,,,,,,0,,FALSE,,,,,FALSE,,12/12/2014 14:53,,1/1/1900 0:00,,,FALSE,,,,,,,,FALSE,,,FALSE,"<a href=""/00OF0000004Ci3d?pv1=&amp;pv2="" target=""_blank"">Questions</a>",day  hours,,,,"&id=500M0000004q2xJ&queryid=[CaseCategorization]a10F0000001eAYR,[CheckRequests]a10F0000001eAYW,[CustomerSupportTools]a10F0000001eAYb,[Forms]a10F0000001eAYg,[CaseComments]a10F0000001eAYl&templateid=a0zF0000003HDjh&qmode=1&defaultpdf=1",,,,,,FALSE,,FALSE,,,,,,,,,,FALSE,,,,,,,,,,,,,,,FALSE,,,,,,,,,,,FALSE,,FALSE,,,,0,,,,001M000000fQVq1IAG,,0,,0,,,,,,,,0,FALSE,FALSE,,Dev Team,FALSE,,,FALSE,,,,0,FALSE,FALSE,,12/10/2014 0:00,,,,,,00GF0000002IUHT,,,,,,FALSE,,,,FALSE,,FALSE,,,,,,,,,FALSE,,,FALSE,,,,FALSE,,,,,Pending dealer follow up,FALSE,,,FALSE,FALSE,,,,,,01mA00000004b0vIAA,,,,TRUE,FALSE,,,,,,,,,,,FALSE,,,,,,,,,,,,,Disabled,,0,,,012F0000000yD2r,,Internal,FALSE,,,,,16646501,,,,,,FALSE,
,,,,,,FALSE,,,,,,,,FALSE,,,,,,,,FALSE,,,,,,FALSE,,,Telephone,,,,FALSE,,,,,,,,,,,,,,,,,,,,,FALSE,Techline case description,Medium,,,FALSE,,0,,FALSE,,,,,644.29,,Yes,,,,,,,,,,,,,,,012F0000000zeud,,,,0,,,,,,You must first enter the Related Vehicle Make,FALSE,,FALSE,,,,,,,,,,FALSE,,,,,,,FALSE,,,,,FALSE,,None,,,,,,0,,,,FALSE,FALSE,,No,FALSE,,,FALSE,,FALSE,,,,,FALSE,,,,,,0,,,,,00eA0000000OSON,,,9,,,,,",",,,,,,,,,,,,,,Yes,,,,,,Active,,,CA16646502,,No,FALSE,,0,"<a href=""https://conductor.appextremes.com/apps/Conga/Composer.aspx?SessionId=00DM0000001deUz!AQYAQJFQgBrDa5.CJrUEstYsAwX5SS.J3nUvJZGUBzsFsOgDFpnznTAtbxoBqQKcHQgWfDP86M6hxRJA70e3bB2F36WCRPpZ&amp;ServerUrl=https://c.cs7.visual.force.com/services/Soap/u/21.0/00DM0000001deUz&amp;id=500M0000004q30I&amp;queryid=[CaseCategorization]a10F0000001eAYR,[CheckRequests]a10F0000001eAYW,[CustomerSupportTools]a10F0000001eAYb,[Forms]a10F0000001eAYg,[CaseComments]a10F0000001eAYl&amp;templateid=a0zF0000003HDjh&amp;qmode=1&amp;defaultpdf=1"" target=""_blank"">Test Conga Workflow URL via UI</a>",,,,,,,,,,,0,,,012F0000000yFmQIAU,,FALSE,,,,,,0,,,,,,FALSE,,,FALSE,,,,,FALSE,0,,,,,,,FALSE,,,,FALSE,,003M000000XiCGh,,FALSE,,FALSE,,,,,,,,,0,,FALSE,,,12/12/2014 13:43,,,,,,,,,FALSE,,,,"What?

Where?

When?

Extent?",,,,,,,,,,,005F00000049vOaIAI,,1ProblemT,FALSE,,,,,,,12/10/2014 17:46,,,FALSE,,FALSE,,,,FALSE,FALSE,,,,,,FALSE,,,,,,,2,,,,,,,,,,,,,,,,0,,,,,,,,,,,,Open,0,,FALSE,,,,,,Yes,FALSE,0,FALSE,12/11/2014 15:37,,None,,FALSE,,,"<br>,  <br><br>Phone: <br>Fax:",,FALSE,,,Add Processing,,,,,0,0,,,FALSE,,,,,,,0,,,,FALSE,,,FALSE,,,,,,,0,,003M000000XiCGhIAN,No Model Indicated,,,FALSE,,,,,,,,0,,,,,,FALSE,,005M00000067DFmIAM,,,,,,,FALSE,,,,,,,,,,,,FALSE,,:,,,FALSE,,,,,FALSE,,,,,,FALSE,,,FALSE,,,,"Appointment Time:

Notes to Agent:",,,,,,,,Brand,,,,,,,,,,,,No,,,FALSE,,,,,,,,,,,,-27,,,,,CA16646502,,,,,,,,0,,005M00000067DFmIAM,,,,FALSE,,,,,,,Tech line case subject,FALSE,,0,,012F0000000zbda,,,,0,0,,,,,,,21.84,Email,,,,,,0,,,,,,,,,FALSE,,FALSE,,No,,,,,,,,,,0,FALSE,0,,,,FALSE,,,,,,,,,,500M0000004q30IIAQ,FALSE,,,,,,,,,,,No Model Indicated,0,,,,,,,,,0,,FALSE,,,,,FALSE,,12/12/2014 13:43,,1/1/1900 0:00,,,FALSE,,,,,,,,FALSE,,,FALSE,"<a href=""/00OF0000004Ci3d?pv1=&amp;pv2="" target=""_blank"">Questions</a>",26 days 20 hours,,,,"&id=500M0000004q30I&queryid=[CaseCategorization]a10F0000001eAYR,[CheckRequests]a10F0000001eAYW,[CustomerSupportTools]a10F0000001eAYb,[Forms]a10F0000001eAYg,[CaseComments]a10F0000001eAYl&templateid=a0zF0000003HDjh&qmode=1&defaultpdf=1",,,,,,FALSE,,FALSE,,,,,,,,,,FALSE,,,,,,,,,,,,,,,FALSE,,,,,,,,,,,FALSE,,FALSE,,,,0,,,,001M000000fQVq1IAG,,0,,0,,,,,,,,0,FALSE,FALSE,,,FALSE,,,FALSE,,,,0,FALSE,FALSE,,12/10/2014 0:00,,,27,,,00GF0000002IUHT,,,,,,FALSE,,,,FALSE,,FALSE,,,,,,,,,FALSE,,,FALSE,,,,FALSE,,,,,Pending dealer follow up,FALSE,,,FALSE,FALSE,,,,,,01mA00000004b0vIAA,,,,TRUE,FALSE,,,,,,,,,,,FALSE,,,,assdf hello world,,,,,,,,,Disabled,Managed Services,0,,,012F0000000zeud,,Phone,FALSE,,,,,16646502,,,,,,FALSE,
,,,,,,FALSE,,,,,,,,FALSE,,,,,,,,FALSE,,,,,,FALSE,,,Telephone,,,,FALSE,,,,,,,,,,,,,,,,,,,,,FALSE,This is Warranty case description,High,,,FALSE,,0,,FALSE,,,,,,,Yes,,,,,,1/2/2015 11:37,,,,,,,,,012F0000000zeud,,,,0,,,,,,You must first enter the Related Vehicle Make,FALSE,,FALSE,,,,,,,,,,FALSE,97,,,,,1/2/2015 11:37,FALSE,,,,,FALSE,,None,,,,,,0,,,,FALSE,FALSE,,No,FALSE,,,FALSE,,FALSE,,,,,FALSE,,,,,,0,,,,,00eA0000000OSON,,,9,,,,,",",,,,,,,,,,,,,,Yes,,,,,,Active,,,CA16646503,,No,FALSE,,0,"<a href=""https://conductor.appextremes.com/apps/Conga/Composer.aspx?SessionId=00DM0000001deUz!AQYAQJFQgBrDa5.CJrUEstYsAwX5SS.J3nUvJZGUBzsFsOgDFpnznTAtbxoBqQKcHQgWfDP86M6hxRJA70e3bB2F36WCRPpZ&amp;ServerUrl=https://c.cs7.visual.force.com/services/Soap/u/21.0/00DM0000001deUz&amp;id=500M0000004q3BG&amp;queryid=[CaseCategorization]a10F0000001eAYR,[CheckRequests]a10F0000001eAYW,[CustomerSupportTools]a10F0000001eAYb,[Forms]a10F0000001eAYg,[CaseComments]a10F0000001eAYl&amp;templateid=a0zF0000003HDjh&amp;qmode=1&amp;defaultpdf=1"" target=""_blank"">Test Conga Workflow URL via UI</a>",,,,,,,,,,,0,,,012F0000000zeudIAA,,FALSE,,,,,,0,,,,,,FALSE,,,FALSE,,,,,FALSE,0,,,,,,,FALSE,,,,FALSE,,003M000000XiCGh,,FALSE,,FALSE,,,,,,,,,0,,FALSE,,,12/17/2014 16:39,,,,,,,,,FALSE,,,,"What?

Where?

When?

Extent?",,,,,,,,,,,005F00000049vOaIAI,,1ProblemE,FALSE,,,,,,,12/10/2014 18:10,,,FALSE,,FALSE,,,,FALSE,FALSE,,,,,,FALSE,,,,,,,3,,,Petr12dgf,,,,,,,,,,,,,0,,,,,,,,,,,,Pending,0,,FALSE,,,,,,Yes,FALSE,0,FALSE,12/16/2014 16:01,,None,,FALSE,,,"<br>,  <br><br>Phone: <br>Fax:",,FALSE,,,Add Processing,,,,,1,0,,,FALSE,,,,,,,0,,,,FALSE,,,FALSE,,,,,,,0,,003M000000XiCGhIAN,No Model Indicated,,,FALSE,,,,,,,,0,,,,,,FALSE,,005M00000067DFmIAM,,,,,,,FALSE,,,,,,,,,,,,FALSE,,:,,,FALSE,,,,,FALSE,,,,,,FALSE,,,FALSE,,,,"Appointment Time:

Notes to Agent:",,,,,,,,Brand,,,,,,,,,,,,No,,,FALSE,,,,,,,,,,,,-27,,,,,CA16646503,,,,,,,,0,,005M00000067DFmIAM,,,,FALSE,,,,,,,This is test subject for Warranty case,FALSE,,0,00012cvxv,012F0000000zbda,,,,0,0,,,,,,2,141.85,Email,,,,,,0,,,,,,,,,FALSE,,FALSE,,No,,,,,,,,,,0,FALSE,0,,,,FALSE,,,,,,,,,,500M0000004q3BGIAY,FALSE,,,,,,,,,,,No Model Indicated,0,,,,,,,,,0,,FALSE,,,,,FALSE,,12/17/2014 16:39,,1/1/1900 0:00,,,FALSE,,,,,,,,FALSE,,,FALSE,"<a href=""/00OF0000004Ci3d?pv1=&amp;pv2="" target=""_blank"">Questions</a>",day  hours,,,,"&id=500M0000004q3BG&queryid=[CaseCategorization]a10F0000001eAYR,[CheckRequests]a10F0000001eAYW,[CustomerSupportTools]a10F0000001eAYb,[Forms]a10F0000001eAYg,[CaseComments]a10F0000001eAYl&templateid=a0zF0000003HDjh&qmode=1&defaultpdf=1",,,,hjk,,FALSE,,FALSE,,,,,,,,,,FALSE,,,,,,,,,,,,,,,FALSE,,,,,,,,,,,FALSE,,FALSE,,,,0,,,,001M000000fQVq1IAG,,0,,0,,,,,,,,0,FALSE,FALSE,,,FALSE,,,FALSE,,,,0,FALSE,FALSE,,12/10/2014 0:00,,,,,,00GF0000002IUHT,,,,,,FALSE,,,,FALSE,,FALSE,,,,,,,,,FALSE,,,FALSE,,,,FALSE,,,,,Pending dealer follow up,FALSE,,,FALSE,FALSE,,,,,,01mA00000004b0vIAA,,,,TRUE,FALSE,,,,,,,,,,,FALSE,,2,,dcsdgb,,,,,,,,,Disabled,Managed Services,0,1,,012F0000000zeud,,Email,FALSE,,,,,16646503,,,,,,FALSE,
,,,,,,FALSE,,,,,,,,FALSE,,,,,,,,FALSE,,,,,,FALSE,,,Telephone,,,,FALSE,,,,,,,,,,,,,,,,,,,,,FALSE,Warranty case description,High,,,FALSE,,0,,FALSE,,,,,624.28,,Yes,,,,,,,,,,,,,,,012F0000000zeud,,,,0,,,,,,You must first enter the Related Vehicle Make,FALSE,,FALSE,,,,,,,,,,FALSE,,,,,,,FALSE,,,,,FALSE,,None,,,,,,0,,,,FALSE,FALSE,,No,FALSE,,,FALSE,,FALSE,,,,,FALSE,,,,,,0,,,,,00eA0000000OSON,,,9,,,,,",",,,,,,,,,,,,,,Yes,,,,,,Active,,,CA16646505,,No,FALSE,,0,"<a href=""https://conductor.appextremes.com/apps/Conga/Composer.aspx?SessionId=00DM0000001deUz!AQYAQJFQgBrDa5.CJrUEstYsAwX5SS.J3nUvJZGUBzsFsOgDFpnznTAtbxoBqQKcHQgWfDP86M6hxRJA70e3bB2F36WCRPpZ&amp;ServerUrl=https://c.cs7.visual.force.com/services/Soap/u/21.0/00DM0000001deUz&amp;id=500M0000004q6e9&amp;queryid=[CaseCategorization]a10F0000001eAYR,[CheckRequests]a10F0000001eAYW,[CustomerSupportTools]a10F0000001eAYb,[Forms]a10F0000001eAYg,[CaseComments]a10F0000001eAYl&amp;templateid=a0zF0000003HDjh&amp;qmode=1&amp;defaultpdf=1"" target=""_blank"">Test Conga Workflow URL via UI</a>",,,,,,,,,,,0,,,012F0000000zeudIAA,,FALSE,,,,,,0,,,,,,FALSE,,,FALSE,,,,,FALSE,0,,,,,,,FALSE,,,,FALSE,,003M000000XiCGh,,FALSE,,FALSE,,,,,,,,,0,,FALSE,,,12/11/2014 14:45,,,,,,,,,FALSE,,,,"What?

Where?

When?

Extent?",,,,,,,,,,,005M00000067DFmIAM,,1ProblemT,FALSE,,,,,,,12/11/2014 13:47,,,FALSE,,FALSE,,,,FALSE,FALSE,,,,,,FALSE,,,,,,,5,,,,,,,,,,,,,,,,0,,,,,,,,,,,,Open,0,,FALSE,,,,,,Yes,FALSE,0,FALSE,12/11/2014 14:01,,None,,FALSE,,,"<br>,  <br><br>Phone: <br>Fax:",,FALSE,,,Add Processing,,,,,1,0,,,FALSE,,,,,,,0,,,,FALSE,,,FALSE,,,,,,,0,,003M000000XiCGhIAN,No Model Indicated,,,FALSE,,,,,,,,0,,,,,,FALSE,,005M00000067DFmIAM,,,,,,,FALSE,,,,,,,,,,,,FALSE,,:,,,FALSE,,,,,FALSE,,,,,,FALSE,,,FALSE,,,,"Appointment Time:

Notes to Agent:",,,,,,,,Brand,,,,,,,,,,,,No,,,FALSE,,,,,,,,,,,,-26,,,,,CA16646505,,,,,,,,0,,005M00000067DFmIAM,,,,FALSE,,,,,,,Warranty case subject,FALSE,,0,,012F0000000zbda,,,,0,0,,,,,,,0.25,Email,,,,,,0,,,,,,,,,FALSE,,FALSE,,No,,,,,,,,,,0,FALSE,0,,,,FALSE,,,,,,,,,,500M0000004q6e9IAA,FALSE,,,,,,,,,,,No Model Indicated,0,,,,,,,,,0,,FALSE,,,,,FALSE,,12/11/2014 14:45,,1/1/1900 0:00,,,FALSE,,,,,,,,FALSE,,,FALSE,"<a href=""/00OF0000004Ci3d?pv1=&amp;pv2="" target=""_blank"">Questions</a>",26 days 0 hours,,,,"&id=500M0000004q6e9&queryid=[CaseCategorization]a10F0000001eAYR,[CheckRequests]a10F0000001eAYW,[CustomerSupportTools]a10F0000001eAYb,[Forms]a10F0000001eAYg,[CaseComments]a10F0000001eAYl&templateid=a0zF0000003HDjh&qmode=1&defaultpdf=1",,,,,,FALSE,,FALSE,,,,,,,,,,FALSE,,,,,,,,,,,,,,,FALSE,,,,,,,,,,,FALSE,,FALSE,,,,0,,,,001M000000fQVq1IAG,,0,,0,,,,,,,,0,FALSE,FALSE,,,FALSE,,,FALSE,,,,0,FALSE,FALSE,,12/11/2014 0:00,,,26,,,00GF0000002IUHT,,,,,,FALSE,,,,FALSE,,FALSE,,,,,,,,,FALSE,,,FALSE,,,,FALSE,,,,,Pending dealer follow up,FALSE,,,FALSE,FALSE,,,,,,01mA00000004b0vIAA,,,,TRUE,FALSE,,,,,,,,,,,FALSE,,,,,,,,,,,,,Disabled,Managed Services,0,,,012F0000000zeud,,Phone,FALSE,,,,,16646505,,,,,,FALSE,
,,,,,,FALSE,,,,,,,,FALSE,,,,,,,,FALSE,,,,,,FALSE,,,Telephone,,,,FALSE,,,,,,,,,,,,,,,,,,,,,FALSE,This is Consumer Affairs case description,Medium,,,FALSE,,0,,FALSE,,,,,622.52,,Yes,,,,,,,,,,,,,,,012F0000000zeud,,,,0,,,,,,You must first enter the Related Vehicle Make,FALSE,,FALSE,,,,,,,,,,FALSE,,,,,,,FALSE,,,,,FALSE,,None,,,,,,0,,,,FALSE,FALSE,,No,FALSE,,,FALSE,,FALSE,,,,,FALSE,,,,,,0,,,,,00eA0000000OSON,,,9,,,,,",",,,,,,,,,,,,,,Yes,,,,,,Active,,,CA16646506,,No,FALSE,,0,"<a href=""https://conductor.appextremes.com/apps/Conga/Composer.aspx?SessionId=00DM0000001deUz!AQYAQJFQgBrDa5.CJrUEstYsAwX5SS.J3nUvJZGUBzsFsOgDFpnznTAtbxoBqQKcHQgWfDP86M6hxRJA70e3bB2F36WCRPpZ&amp;ServerUrl=https://c.cs7.visual.force.com/services/Soap/u/21.0/00DM0000001deUz&amp;id=500M0000004q74L&amp;queryid=[CaseCategorization]a10F0000001eAYR,[CheckRequests]a10F0000001eAYW,[CustomerSupportTools]a10F0000001eAYb,[Forms]a10F0000001eAYg,[CaseComments]a10F0000001eAYl&amp;templateid=a0zF0000003HDjh&amp;qmode=1&amp;defaultpdf=1"" target=""_blank"">Test Conga Workflow URL via UI</a>",,,,,,,,,,,0,,,012F0000000y9y7IAA,,FALSE,,,,,,0,,,,,,FALSE,,,FALSE,,,,,FALSE,0,,,,,,,FALSE,,,,FALSE,,003M000000XiHsB,,FALSE,,FALSE,,,,,,,,,0,,FALSE,,,12/12/2014 14:12,,,,,,,,,FALSE,,,,"What?

Where?

When?

Extent?",,,,,,,,,,,005F00000049vOaIAI,,1ProblemT,FALSE,,,,,,,12/11/2014 15:32,,,FALSE,,FALSE,,,,FALSE,FALSE,,,,,,FALSE,,,,,,,6,,,,,,,,,,,,,,,,0,,,,,,,,,,,,Open,0,,FALSE,,,,,,No,FALSE,0,FALSE,,,None,,FALSE,,,"<br>,  <br><br>Phone: <br>Fax:",,FALSE,,,Add Processing,,,,,0,0,,,FALSE,,,,,,,0,,,,FALSE,,,FALSE,,,,,,,0,,003M000000XiHsBIAV,No Model Indicated,,,FALSE,,,,,,,,0,,,,,,FALSE,,005F00000049vOaIAI,,,,,,,FALSE,,,,,,,,,,,,FALSE,,:,,,FALSE,,,,,FALSE,,,,,,FALSE,,,FALSE,,,,"Appointment Time:

Notes to Agent:",,,,,,,,Brand,,,,,,,,,,,,No,,,FALSE,,,,,,,,,,,,-26,,,,,CA16646506,,,,,,,,0,,005F00000031aebIAA,,,,FALSE,,,,,,,This is test subject for Consumer Affairs case,FALSE,,0,,012F0000000yCAL,,,,0,0,,,,,,,0,Email,,,,,,0,,,,,,,,,FALSE,,FALSE,,No,,,,,,,,,,0,FALSE,0,,,,FALSE,,,,,,,,,,500M0000004q74LIAQ,FALSE,,,,,,,,,,,No Model Indicated,0,,,,,,,,,0,,FALSE,,,,,FALSE,,12/12/2014 14:12,,1/1/1900 0:00,,,FALSE,,,,,,,,FALSE,,,FALSE,"<a href=""/00OF0000004Ci3d?pv1=&amp;pv2="" target=""_blank"">Questions</a>",25 days 22 hours,,,,"&id=500M0000004q74L&queryid=[CaseCategorization]a10F0000001eAYR,[CheckRequests]a10F0000001eAYW,[CustomerSupportTools]a10F0000001eAYb,[Forms]a10F0000001eAYg,[CaseComments]a10F0000001eAYl&templateid=a0zF0000003HDjh&qmode=1&defaultpdf=1",,,,,,FALSE,,FALSE,,,,,,,,,,FALSE,,,,,,,,,,,,,,,FALSE,,,,,,,,,,,FALSE,,FALSE,,,,0,,,,001M000000fQVq1IAG,,0,,0,,,,,,,,0,FALSE,FALSE,,,FALSE,,,FALSE,,,,0,FALSE,FALSE,,12/11/2014 0:00,,,26,,,00GF0000002IUHT,,,,,,FALSE,,,,FALSE,,FALSE,,,,,,,,,FALSE,,,FALSE,,,,FALSE,,,,,Pending dealer follow up,FALSE,,,FALSE,FALSE,,,,,,01mA00000004b0vIAA,,,,TRUE,FALSE,,,,,,,,,,,FALSE,,,,,,,,,,,,,Disabled,Managed Services,0,,,012F0000000zeud,,Phone,FALSE,,,,,16646506,,,,,,FALSE,
,,,,,,FALSE,,,,,,,,FALSE,,,,,,,,FALSE,,,,,,FALSE,,,Telephone,,,,FALSE,,,,,,,,,,,,,,,,,,,,,FALSE,Consumer Affairs case description,Normal,,,FALSE,,0,,FALSE,,,,,,,Yes,,,,,,1/2/2015 18:37,,,,,,,,,012F0000000zeud,,,,0,,,,,,You must first enter the Related Vehicle Make,FALSE,,FALSE,,,,,,,,,,FALSE,0,,,,,1/2/2015 18:37,FALSE,,,,,FALSE,,None,,,,,,0,,,,FALSE,FALSE,,No,FALSE,,,FALSE,,FALSE,,,,,FALSE,,,,,,0,,,,,00eA0000000OSON,,,9,,,,,",",,,,,,,,,,,,,,Yes,,,,,,Active,,,CA16646508,,No,FALSE,,0,"<a href=""https://conductor.appextremes.com/apps/Conga/Composer.aspx?SessionId=00DM0000001deUz!AQYAQJFQgBrDa5.CJrUEstYsAwX5SS.J3nUvJZGUBzsFsOgDFpnznTAtbxoBqQKcHQgWfDP86M6hxRJA70e3bB2F36WCRPpZ&amp;ServerUrl=https://c.cs7.visual.force.com/services/Soap/u/21.0/00DM0000001deUz&amp;id=500M0000004q7EQ&amp;queryid=[CaseCategorization]a10F0000001eAYR,[CheckRequests]a10F0000001eAYW,[CustomerSupportTools]a10F0000001eAYb,[Forms]a10F0000001eAYg,[CaseComments]a10F0000001eAYl&amp;templateid=a0zF0000003HDjh&amp;qmode=1&amp;defaultpdf=1"" target=""_blank"">Test Conga Workflow URL via UI</a>",,,,,,,,,,,0,,,012F0000000y9y7IAA,,FALSE,,,,,,0,,,,,,FALSE,,,FALSE,,,,,FALSE,0,,,,,,,FALSE,,,,FALSE,,003M000000YPWLd,,FALSE,,FALSE,,,,,,,,,0,,FALSE,,,1/2/2015 14:14,,,,,,,,,FALSE,,,,"What?

Where?

When?

Extent?",,,,,,,,,,,005M00000067DFcIAM,,1ProblemT,FALSE,,,,,,,12/11/2014 17:13,,,FALSE,,FALSE,,,,FALSE,FALSE,,,,,,FALSE,,,,,,,8,,,a,,,,,,,,,,,,,0,,,,,,,,,,,,Pending,0,,FALSE,,,,,,Yes,FALSE,0,FALSE,12/15/2014 11:27,,None,,FALSE,,,"<br>,  <br><br>Phone: <br>Fax:",,FALSE,,,Add Processing,,,,,0,0,,,FALSE,,,,,,,0,,,,FALSE,,,FALSE,,,,,,,0,,003M000000YPWLdIAP,No Model Indicated,,,FALSE,,,,,,,,0,,,,,,FALSE,,005M00000067DFcIAM,,,,,,,FALSE,,,,,,,,,,,,FALSE,,:,,,FALSE,,,,,FALSE,,,,,,FALSE,,,FALSE,,,,"Appointment Time:

Notes to Agent:",,,,,,,,Brand,,,,,,,,,,,,No,,,FALSE,,,,,,,,,,,,-26,,,,,CA16646508,,,,,,,,0,,005F00000049vOaIAI,,,,FALSE,,,,,,,Consumer Affairs case subject,FALSE,,0,dddd,012F0000000zbda,,,,0,0,,,,,,drrey,90.24,Email,,,,,,0,,,,,,,,,FALSE,,FALSE,,No,,,,,,,,,,0,FALSE,0,,,,FALSE,,,,,,,,,,500M0000004q7EQIAY,FALSE,,,,,,,,,,,No Model Indicated,0,,,,,,,,,0,,FALSE,,,,,FALSE,,1/2/2015 14:14,,1/1/1900 0:00,,,FALSE,,,,,,,,FALSE,,,FALSE,"<a href=""/00OF0000004Ci3d?pv1=&amp;pv2="" target=""_blank"">Questions</a>",day  hours,,,,"&id=500M0000004q7EQ&queryid=[CaseCategorization]a10F0000001eAYR,[CheckRequests]a10F0000001eAYW,[CustomerSupportTools]a10F0000001eAYb,[Forms]a10F0000001eAYg,[CaseComments]a10F0000001eAYl&templateid=a0zF0000003HDjh&qmode=1&defaultpdf=1",,,,44455s,,FALSE,,FALSE,,,,,,,,,,FALSE,,,,,,,,,,,,,,,FALSE,,,,,,,,,,,FALSE,,FALSE,,,,0,,,,001M000000fQVq1IAG,,0,,0,,,,,,,,0,FALSE,FALSE,,,FALSE,,,FALSE,,,,0,FALSE,FALSE,,12/11/2014 0:00,,,,,,00GF0000002IUHT,,,,,,FALSE,,,,FALSE,,FALSE,,,,,,,,,FALSE,,,FALSE,,,,FALSE,,,,,Pending dealer follow up,FALSE,,,FALSE,FALSE,,,,,,01mA00000004b0vIAA,,,,TRUE,FALSE,,,,,,,,,,,FALSE,,rr,,123,,,,,,,,,Disabled,Managed Services,0,,,012F0000000zeud,,Phone,FALSE,,,,,16646508,,,,,,FALSE,
